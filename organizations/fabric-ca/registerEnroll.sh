#!/bin/bash

function createCentroArte() {
    infoln "Enrolling the CA admin"
    mkdir -p organizations/peerOrganizations/centroarte.example.com/
    
    export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/centroarte.example.com/
    
    set -x
    fabric-ca-client enroll -u https://admin:adminpw@localhost:7054 --caname ca-centroarte --tls.certfiles "${PWD}/organizations/fabric-ca/centroarte/ca-cert.pem"
    { set +x; } 2>/dev/null
    
    echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-centroarte.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-centroarte.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-centroarte.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-centroarte.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/centroarte.example.com/msp/config.yaml"
    
    # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories
    
    # Copy centroarte's CA cert to centroarte's /msp/tlscacerts directory (for use in the channel MSP definition)
    mkdir -p "${PWD}/organizations/peerOrganizations/centroarte.example.com/msp/tlscacerts"
    cp "${PWD}/organizations/fabric-ca/centroarte/ca-cert.pem" "${PWD}/organizations/peerOrganizations/centroarte.example.com/msp/tlscacerts/ca.crt"
    
    # Copy centroarte's CA cert to centroarte's /tlsca directory (for use by clients)
    mkdir -p "${PWD}/organizations/peerOrganizations/centroarte.example.com/tlsca"
    cp "${PWD}/organizations/fabric-ca/centroarte/ca-cert.pem" "${PWD}/organizations/peerOrganizations/centroarte.example.com/tlsca/tlsca.centroarte.example.com-cert.pem"
    
    # Copy centroarte's CA cert to centroarte's /ca directory (for use by clients)
    mkdir -p "${PWD}/organizations/peerOrganizations/centroarte.example.com/ca"
    cp "${PWD}/organizations/fabric-ca/centroarte/ca-cert.pem" "${PWD}/organizations/peerOrganizations/centroarte.example.com/ca/ca.centroarte.example.com-cert.pem"
    
    infoln "Registering peer0"
    set -x
    fabric-ca-client register --caname ca-centroarte --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/centroarte/ca-cert.pem"
    { set +x; } 2>/dev/null
    
    infoln "Registering user"
    set -x
    fabric-ca-client register --caname ca-centroarte --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/centroarte/ca-cert.pem"
    { set +x; } 2>/dev/null
    
    infoln "Registering the org admin"
    set -x
    fabric-ca-client register --caname ca-centroarte --id.name centroarteadmin --id.secret centroarteadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/centroarte/ca-cert.pem"
    { set +x; } 2>/dev/null
    
    infoln "Generating the peer0 msp"
    set -x
    fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca-centroarte -M "${PWD}/organizations/peerOrganizations/centroarte.example.com/peers/peer0.centroarte.example.com/msp" --csr.hosts peer0.centroarte.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/centroarte/ca-cert.pem"
    { set +x; } 2>/dev/null
    
    cp "${PWD}/organizations/peerOrganizations/centroarte.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/centroarte.example.com/peers/peer0.centroarte.example.com/msp/config.yaml"
    
    infoln "Generating the peer0-tls certificates"
    set -x
    fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca-centroarte -M "${PWD}/organizations/peerOrganizations/centroarte.example.com/peers/peer0.centroarte.example.com/tls" --enrollment.profile tls --csr.hosts peer0.centroarte.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/centroarte/ca-cert.pem"
    { set +x; } 2>/dev/null
    
    # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
    cp "${PWD}/organizations/peerOrganizations/centroarte.example.com/peers/peer0.centroarte.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/centroarte.example.com/peers/peer0.centroarte.example.com/tls/ca.crt"
    cp "${PWD}/organizations/peerOrganizations/centroarte.example.com/peers/peer0.centroarte.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/centroarte.example.com/peers/peer0.centroarte.example.com/tls/server.crt"
    cp "${PWD}/organizations/peerOrganizations/centroarte.example.com/peers/peer0.centroarte.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/centroarte.example.com/peers/peer0.centroarte.example.com/tls/server.key"
    
    infoln "Generating the user msp"
    set -x
    fabric-ca-client enroll -u https://user1:user1pw@localhost:7054 --caname ca-centroarte -M "${PWD}/organizations/peerOrganizations/centroarte.example.com/users/User1@centroarte.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/centroarte/ca-cert.pem"
    { set +x; } 2>/dev/null
    
    cp "${PWD}/organizations/peerOrganizations/centroarte.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/centroarte.example.com/users/User1@centroarte.example.com/msp/config.yaml"
    
    infoln "Generating the org admin msp"
    set -x
    fabric-ca-client enroll -u https://centroarteadmin:centroarteadminpw@localhost:7054 --caname ca-centroarte -M "${PWD}/organizations/peerOrganizations/centroarte.example.com/users/Admin@centroarte.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/centroarte/ca-cert.pem"
    { set +x; } 2>/dev/null
    
    cp "${PWD}/organizations/peerOrganizations/centroarte.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/centroarte.example.com/users/Admin@centroarte.example.com/msp/config.yaml"
}

function createAnabelSegura() {
    infoln "Enrolling the CA admin"
    mkdir -p organizations/peerOrganizations/anabelsegura.example.com/
    
    export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/anabelsegura.example.com/
    
    set -x
    fabric-ca-client enroll -u https://admin:adminpw@localhost:8054 --caname ca-anabelsegura --tls.certfiles "${PWD}/organizations/fabric-ca/anabelsegura/ca-cert.pem"
    { set +x; } 2>/dev/null
    
    echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-anabelsegura.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-anabelsegura.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-anabelsegura.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-anabelsegura.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/anabelsegura.example.com/msp/config.yaml"
    
    # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories
    
    # Copy anabelsegura's CA cert to anabelsegura's /msp/tlscacerts directory (for use in the channel MSP definition)
    mkdir -p "${PWD}/organizations/peerOrganizations/anabelsegura.example.com/msp/tlscacerts"
    cp "${PWD}/organizations/fabric-ca/anabelsegura/ca-cert.pem" "${PWD}/organizations/peerOrganizations/anabelsegura.example.com/msp/tlscacerts/ca.crt"
    
    # Copy anabelsegura's CA cert to anabelsegura's /tlsca directory (for use by clients)
    mkdir -p "${PWD}/organizations/peerOrganizations/anabelsegura.example.com/tlsca"
    cp "${PWD}/organizations/fabric-ca/anabelsegura/ca-cert.pem" "${PWD}/organizations/peerOrganizations/anabelsegura.example.com/tlsca/tlsca.anabelsegura.example.com-cert.pem"
    
    # Copy anabelsegura's CA cert to anabelsegura's /ca directory (for use by clients)
    mkdir -p "${PWD}/organizations/peerOrganizations/anabelsegura.example.com/ca"
    cp "${PWD}/organizations/fabric-ca/anabelsegura/ca-cert.pem" "${PWD}/organizations/peerOrganizations/anabelsegura.example.com/ca/ca.anabelsegura.example.com-cert.pem"
    
    infoln "Registering peer0"
    set -x
    fabric-ca-client register --caname ca-anabelsegura --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/anabelsegura/ca-cert.pem"
    { set +x; } 2>/dev/null
    
    infoln "Registering user"
    set -x
    fabric-ca-client register --caname ca-anabelsegura --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/anabelsegura/ca-cert.pem"
    { set +x; } 2>/dev/null
    
    infoln "Registering the org admin"
    set -x
    fabric-ca-client register --caname ca-anabelsegura --id.name anabelseguraadmin --id.secret anabelseguraadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/anabelsegura/ca-cert.pem"
    { set +x; } 2>/dev/null
    
    infoln "Generating the peer0 msp"
    set -x
    fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8054 --caname ca-anabelsegura -M "${PWD}/organizations/peerOrganizations/anabelsegura.example.com/peers/peer0.anabelsegura.example.com/msp" --csr.hosts peer0.anabelsegura.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/anabelsegura/ca-cert.pem"
    { set +x; } 2>/dev/null
    
    cp "${PWD}/organizations/peerOrganizations/anabelsegura.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/anabelsegura.example.com/peers/peer0.anabelsegura.example.com/msp/config.yaml"
    
    infoln "Generating the peer0-tls certificates"
    set -x
    fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8054 --caname ca-anabelsegura -M "${PWD}/organizations/peerOrganizations/anabelsegura.example.com/peers/peer0.anabelsegura.example.com/tls" --enrollment.profile tls --csr.hosts peer0.anabelsegura.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/anabelsegura/ca-cert.pem"
    { set +x; } 2>/dev/null
    
    # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
    cp "${PWD}/organizations/peerOrganizations/anabelsegura.example.com/peers/peer0.anabelsegura.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/anabelsegura.example.com/peers/peer0.anabelsegura.example.com/tls/ca.crt"
    cp "${PWD}/organizations/peerOrganizations/anabelsegura.example.com/peers/peer0.anabelsegura.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/anabelsegura.example.com/peers/peer0.anabelsegura.example.com/tls/server.crt"
    cp "${PWD}/organizations/peerOrganizations/anabelsegura.example.com/peers/peer0.anabelsegura.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/anabelsegura.example.com/peers/peer0.anabelsegura.example.com/tls/server.key"
    
    infoln "Generating the user msp"
    set -x
    fabric-ca-client enroll -u https://user1:user1pw@localhost:8054 --caname ca-anabelsegura -M "${PWD}/organizations/peerOrganizations/anabelsegura.example.com/users/User1@anabelsegura.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/anabelsegura/ca-cert.pem"
    { set +x; } 2>/dev/null
    
    cp "${PWD}/organizations/peerOrganizations/anabelsegura.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/anabelsegura.example.com/users/User1@anabelsegura.example.com/msp/config.yaml"
    
    infoln "Generating the org admin msp"
    set -x
    fabric-ca-client enroll -u https://anabelseguraadmin:anabelseguraadminpw@localhost:8054 --caname ca-anabelsegura -M "${PWD}/organizations/peerOrganizations/anabelsegura.example.com/users/Admin@anabelsegura.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/anabelsegura/ca-cert.pem"
    { set +x; } 2>/dev/null
    
    cp "${PWD}/organizations/peerOrganizations/anabelsegura.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/anabelsegura.example.com/users/Admin@anabelsegura.example.com/msp/config.yaml"
}

function createOrderer() {
    infoln "Enrolling the CA admin"
    mkdir -p organizations/ordererOrganizations/example.com
    
    export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/example.com
    
    set -x
    fabric-ca-client enroll -u https://admin:adminpw@localhost:9054 --caname ca-orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
    { set +x; } 2>/dev/null
    
    echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml"
    
    # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories
    
    # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
    mkdir -p "${PWD}/organizations/ordererOrganizations/example.com/msp/tlscacerts"
    cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/example.com/msp/tlscacerts/tlsca.example.com-cert.pem"
    
    # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
    mkdir -p "${PWD}/organizations/ordererOrganizations/example.com/tlsca"
    cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/example.com/tlsca/tlsca.example.com-cert.pem"
    
    infoln "Registering orderer"
    set -x
    fabric-ca-client register --caname ca-orderer --id.name orderer --id.secret ordererpw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
    { set +x; } 2>/dev/null
    
    infoln "Registering the orderer admin"
    set -x
    fabric-ca-client register --caname ca-orderer --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
    { set +x; } 2>/dev/null
    
    infoln "Generating the orderer msp"
    set -x
    fabric-ca-client enroll -u https://orderer:ordererpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp" --csr.hosts orderer.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
    { set +x; } 2>/dev/null
    
    cp "${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/config.yaml"
    
    infoln "Generating the orderer-tls certificates"
    set -x
    fabric-ca-client enroll -u https://orderer:ordererpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls" --enrollment.profile tls --csr.hosts orderer.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
    { set +x; } 2>/dev/null
    
    # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
    cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt"
    cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt"
    cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key"
    
    # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
    mkdir -p "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts"
    cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem"
    
    infoln "Generating the admin msp"
    set -x
    fabric-ca-client enroll -u https://ordererAdmin:ordererAdminpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/example.com/users/Admin@example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
    { set +x; } 2>/dev/null
    
    cp "${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/example.com/users/Admin@example.com/msp/config.yaml"
}
